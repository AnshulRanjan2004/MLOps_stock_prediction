name: training job
on:
  push:
    branches:
      - "training-automation"
jobs:
  train-model:
    runs-on: ubuntu-latest
    steps:
    - name: check out repo
      uses: actions/checkout@v2
    - name: azure login
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}
    - name: setup
      run: bash setup.sh
      working-directory: cli
      continue-on-error: true
    - name: create-compute
      run: az ml compute create -f create_instance.yml || exit 0
      working-directory: utils
    - name: train-job
      # run: az ml job create --file train.yml
      run: run_id=$(az ml job create -f train.yml --query name -o tsv)
      working-directory: jobs
    - run: echo run_id
    - run: echo "print" 
    # - run: az ml job show -n azureml-GA-run10 -r RG -w AzureMLWorkspace $run_id
    - run: echo "run_id={run_id}" >> $GITHUB_OUTPUT
      id: printer
    - run: echo "${{ steps.printer.outputs.run_id }}"

    # - name: delete-compute
    #   run: az ml compute delete --name computer456 --resource-group RG --workspace-name AzureMLWorkspace
    
    # - name: register-step
    #   run: az ml model create
    #     --name GA_model 
    #     --version 1
    #     --path azureml://jobs/{azureml-GA-run9}/outputs/artifacts/paths/outputs/
    
        # --experiment-name github-action-test
        # --run-id ${{ train-model.printer.outputs.run_id }}

    ###
# 1. Logging metrics during training
# 2. Registering the model
# 3. Scoring the new model
# 4. Labelling it as challenger if it is good
# 5. Shutdown compute after all operations
# 6. Passing of variables: jobname, ticker
###