name: training and registering model
on:
  push:
    branches:
      - "training-automation"
jobs:
  # train-job:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: check out repo
  #     uses: actions/checkout@v2
  #   - name: azure login
  #     uses: azure/login@v1
  #     with:
  #       creds: ${{secrets.AZURE_CREDENTIALS}}
  #   - name: setup
  #     run: bash setup.sh
  #     working-directory: cli
  #     continue-on-error: true
  #   - name: create-compute
  #     run: az ml compute create -f create_instance.yml || exit 0
  #     working-directory: utils
  #   - name: train-job
  #     working-directory: jobs
  #     run: az ml job create --file train.yml
    
  # register-job:
  #   needs: [train-job]
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: check out repo
  #     uses: actions/checkout@v2
  #   - name: azure login
  #     uses: azure/login@v1
  #     with:
  #       creds: ${{secrets.AZURE_CREDENTIALS}}
  #   - name: setup
  #     run: bash setup.sh
  #     working-directory: cli
  #     continue-on-error: true
  #   - name: register-model
  #     run: az ml model create
  #       --name GA_model 
  #       --version 4
  #       --path azureml://jobs/azureml-GA-run26/outputs/artifacts/paths/outputs/
  #       --type custom_model

  delete-compute:
    needs: [train-job]
    runs-on: ubuntu-latest
    steps:
    - name: check out repo
      uses: actions/checkout@v2
    - name: azure login
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}
    - name: setup
      run: bash setup.sh
      working-directory: cli
      continue-on-error: true
    - name: delete-step
      run: az ml compute delete --name computer456 --yes

###
# 1. Test MAPE to be stored - done
# 2. Registering the model - done
# 3. Scoring the new model - TBD in release pipeline
# 4. Labelling it as challenger if it is good
# 5. Shutdown compute after all operations - done
# 6. Passing of variables: jobname, ticker
###