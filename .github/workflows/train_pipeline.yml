name: training job
on:
  push:
    branches:
      - "training-automation"
jobs:
  train-job:
    runs-on: ubuntu-latest
    steps:
    - name: check out repo
      uses: actions/checkout@v2
    - name: azure login
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}
    - name: setup
      run: bash setup.sh
      working-directory: cli
      continue-on-error: true
    - name: create-compute
      run: az ml compute create -f create_instance.yml || exit 0
      working-directory: utils
    - name: train-job
      working-directory: jobs
      run: az ml job create --file train.yml
    
  register-job:
    needs: [train-job]
    runs-on: ubuntu-latest
    steps:
    - name: check out repo
      uses: actions/checkout@v2
    - name: azure login
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}
    - name: setup
      run: bash setup.sh
      working-directory: cli
      continue-on-error: true
    - name: training-job-status
      run: |
        Jobstatus=$(az ml job show --name azureml-GA-run22 --query status)
        echo $Jobstatus
    - run: az ml model create
        --name GA_model 
        --version 2
        --path azureml://jobs/azureml-GA-run22/outputs/artifacts/paths/outputs/
        --type custom_model

        # Big problem: Ensuring the training job has completed
  
  # delete-compute:
  #   needs: [train-job]
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: check out repo
  #     uses: actions/checkout@v2
  #   - name: azure login
  #     uses: azure/login@v1
  #     with:
  #       creds: ${{secrets.AZURE_CREDENTIALS}}
  #   - name: setup
  #     run: bash setup.sh
  #     working-directory: cli
  #     continue-on-error: true
  #   - name: delete-step
  #     run: az ml compute delete --name computer456


###
# 1. Logging metrics during training
# 2. Registering the model
# 3. Scoring the new model
# 4. Labelling it as challenger if it is good
# 5. Shutdown compute after all operations
# 6. Passing of variables: jobname, ticker
###