name: training and registering model

env:
  job_name: ga-run-9
  compute_name: computer456
  registered_model_name: GA_model

on:
  # push:
  #   branches: [training-automation, main]
  # pull-request:
  #   branches: [ main ]
  #   paths:
  #   - .github/workflows/model_pipeline.yml
  #   - jobs/train.py
  #   - jobs/train.yml
    schedule:
    - cron: "1 2 * * 1"

jobs:
  train-job:
    runs-on: ubuntu-latest
    steps:
    - name: check out repo
      uses: actions/checkout@v2
    - name: azure login
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}
    - name: setup
      run: bash setup.sh
      working-directory: cli
      continue-on-error: true
    - name: create-compute
      run: az ml compute create --name $compute_name --size STANDARD_DS11_v2 --min-instances 1 --max-instances 2 --type AmlCompute
    - name: train-job
      working-directory: jobs
      run: az ml job create --file train.yml --debug --stream # --stream causes the step to go on, as long as the model trains.
# If training is expected to take a long time, registration can be scheduled in a separate cron job, triggered later.
  register-job:
    needs: [train-job]
    runs-on: ubuntu-latest
    steps:
    - name: check out repo
      uses: actions/checkout@v2
    - name: azure login
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}
    - name: setup
      run: bash setup.sh
      working-directory: cli
      continue-on-error: true
    - name: register-model
      run: az ml model create
        --name $registered_model_name 
        --version 10
        --path azureml://jobs/ga-run-9/outputs/artifacts/paths/outputs/
        --type custom_model

  delete-compute:
    needs: [train-job]
    runs-on: ubuntu-latest
    steps:
    - name: check out repo
      uses: actions/checkout@v2
    - name: azure login
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}
    - name: setup
      run: bash setup.sh
      working-directory: cli
      continue-on-error: true
    - name: delete-step
      run: az ml compute delete --name $compute_name --yes || exit 0

###
# 3. Scoring the new model - TBD in release pipeline
# 4. Labelling it as challenger if it is good
###